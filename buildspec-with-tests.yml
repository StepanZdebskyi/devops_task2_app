version: 0.2

env:
  variables:
    # These can be overridden in CodeBuild project environment variables
    NODE_ENV: "test"
    
phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo Installing dependencies...
      - npm ci
      
  pre_build:
    commands:
      - echo Pre-build phase started on `date`
      - echo Running tests...
      - npm test
      - echo Tests completed successfully
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo Repository URI is $REPOSITORY_URI
      - echo Image tag is $IMAGE_TAG
      
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:latest
      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Running security scan on Docker image...
      - |
        # Optional: Run trivy security scan
        if command -v trivy &> /dev/null; then
          trivy image --exit-code 0 --no-progress --format table $IMAGE_REPO_NAME:$IMAGE_TAG
        else
          echo "Trivy not installed, skipping security scan"
        fi
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file for ECS deployment...
      - printf '[{"name":"simple-nodejs-backend","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Image pushed successfully to $REPOSITORY_URI:$IMAGE_TAG

reports:
  test_reports:
    files:
      - 'test-results.xml'
    base-directory: '.'
    file-format: 'JUNITXML'
    
artifacts:
  files:
    - imagedefinitions.json
    - Dockerfile
    - package.json
  name: BuildArtifacts-$(date +%Y-%m-%d-%H-%M-%S)
  
cache:
  paths:
    - '/root/.npm/**/*'
    - 'node_modules/**/*'
